name: Publish Docker images

on: [push]

env:
  REGISTRY: quay.io
  ORGANIZATION: casacore
  IMAGE: ${{ github.repository }}

jobs:
  build_images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to registry
        uses: docker/login-action@v3
        with:
          # Credentials for robot account "github" on Quay for organization "casacore"
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      # - name: Extract metadata (tags, labels) for Docker
      #   id: meta
      #   uses: docker/metadata-action@v5
      #   with:
      #     images: ${{ env.REGISTRY }}/${{ env.ORGANIZATION }}/${{ env.IMAGE }}

      - name: Determine build-args
        id: build-args
        run: |
          py_major=$(echo ${{ matrix.python-version }} | cut -d'.' -f1)
          py_minor=$(echo ${{ matrix.python-version }} | cut -d'.' -f2)
          # [ ${py_major} -eq 3 ] && [ ${py_minor} -le 7 ] && py_unicode="m" || py_unicode=
          which git
          # git_tag=$(git describe --tags --dirty)  ## TODO: Probably git is not avaiable ?!
          echo "PYMAJOR=${py_major}" >> "$GITHUB_OUTPUT"
          echo "PYMINOR=${py_minor}" >> "$GITHUB_OUTPUT"
          # echo "PYUNICODE=${py_unicode}" >> "$GITHUB_OUTPUT"
          # echo "REPOSITORY=${{ env.REGISTRY }}/${{ env.ORGANIZATION}}/${{ env.IMAGE }}" >> "$GITHUB_OUTPUT"
          # echo "TAG=$(git describe --tags)_py${py_major}${py_minor}" >> "$GITHUB_OUTPUT"

      # - name: Build docker image
      #   run: |
      #     git_tag=$(git describe --tags --dirty)
      #     py_major=$(echo ${{ matrix.python-version }} | cut -d'.' -f1)
      #     py_minor=$(echo ${{ matrix.python-version }} | cut -d'.' -f2)
      #     [ ${py_major} -eq 3 ] && [ ${py_minor} -le 7 ] && py_unicode="m" || py_unicode=
      #     echo docker build \
      #       --build-arg PYMAJOR=${py_major} \
      #       --build-arg PYMINOR=${py_minor} \
      #       --build-arg PYUNICODE=${py_unicode} \
      #       --file ./docker/py_wheel.docker \
      #       --tag ${{ env.REGISTRY }}/${{ env.ORGANIZATION}}/${{ env.IMAGE }}

      - name: Build and push docker image
        uses: docker/build-push-action@v5
        with:
          build-args:
            PYMAJOR=${{ steps.build-args.outputs.PYMAJOR }}
            PYMINOR=${{ steps.build-args.outputs.PYMINOR }}
            PYUNICODE=${{ steps.build-args.outputs.PYUNICODE }}
          context: .
          file: docker/py_wheel.docker
          push: false
          tags: "${{ steps.build-args.outputs.REPOSITORY }}:${{ steps.build-args.outputs.TAG }}"
          # labels: ${{ steps.meta.outputs.labels }}
