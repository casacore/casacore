1000 casa/Arrays/ArrayIO.cc 
     = casa/BasicSL/Complex.h 
     template Bool read(istream &, Array<Complex> &, IPosition const *, Bool) 
     template Bool read(istream &, Array<Double> &, IPosition const *, Bool) 
     template Bool readArrayBlock(istream &, Bool &, IPosition &, Block<Complex> &, IPosition const *, Bool) 
     template Bool readArrayBlock(istream &, Bool &, IPosition &, Block<Double> &, IPosition const *, Bool) 
     template istream & operator>>(istream &, Array<Double> &) 
     template void readAsciiMatrix(Matrix<Int> &, Char const *) 
     template void readAsciiVector(Vector<Double> &, Char const *) 
     template void read_array(Array<Int> &, Char const *) 
     template void read_array(Array<Int> &, String const &) 
     template void writeAsciiMatrix(Matrix<Int> const &, Char const *) 
     template void writeAsciiVector(Vector<Double> const &, Char const *) 
     template void write_array(Array<Int> const &, Char const *) 
     template void write_array(Array<Int> const &, String const &) 
1010 casa/Arrays/ArrayIO.cc 
     = casa/Quanta/Quantum.h 
     template istream & operator>>(istream &, Array<Quantum<Double> > &) 
     template Bool read(istream &, Array<Quantum<Double> > &, IPosition const *, Bool) 
     template Bool readArrayBlock(istream &, Bool &, IPosition &, Block<Quantum<Double> > &, IPosition const *, Bool) 
1000 casa/Arrays/ArrayLogical.cc 
     = casa/BasicSL/Complex.h 
     template Bool allGE(Array<Int> const &, Array<Int> const &) 
     template Bool allGT(Array<Int> const &, Array<Int> const &) 
     template Bool allLE(Array<Int> const &, Array<Int> const &) 
     template Bool allLE(Array<Int> const &, Int const &) 
     template Bool allLT(Array<Int> const &, Array<Int> const &) 
     template Bool allNE(Array<Int> const &, Array<Int> const &) 
     template Bool allNE(Array<Int> const &, Int const &) 
     template Bool allNear(Float const &, Array<Float> const &, Double) 
     template Bool allNearAbs(Array<Complex> const &, Array<Complex> const &, Double) 
     template Bool allNearAbs(Array<DComplex> const &, Array<DComplex> const &, Double) 
     template Bool allNearAbs(Float const &, Array<Float> const &, Double) 
     template Bool anyEQ(Array<Int> const &, Array<Int> const &) 
     template Bool anyEQ(Int const &, Array<Int> const &) 
     template Bool anyGE(Array<Int> const &, Array<Int> const &) 
     template Bool anyGE(Array<Int> const &, Int const &) 
     template Bool anyGE(Int const &, Array<Int> const &) 
     template Bool anyGT(Array<Int> const &, Array<Int> const &) 
     template Bool anyGT(Int const &, Array<Int> const &) 
     template Bool anyLE(Array<Int> const &, Array<Int> const &) 
     template Bool anyLE(Int const &, Array<Int> const &) 
     template Bool anyLT(Array<Int> const &, Array<Int> const &) 
     template Bool anyLT(Int const &, Array<Int> const &) 
     template Bool anyNE(Int const &, Array<Int> const &) 
     template Bool anyNear(Array<Float> const &, Array<Float> const &, Double) 
     template Bool anyNear(Array<Float> const &, Float const &, Double) 
     template Bool anyNear(Float const &, Array<Float> const &, Double) 
     template Bool anyNearAbs(Array<Float> const &, Array<Float> const &, Double) 
     template Bool anyNearAbs(Array<Float> const &, Float const &, Double) 
     template Bool anyNearAbs(Float const &, Array<Float> const &, Double) 
     template LogicalArray operator!=(Array<Int> const &, Array<Int> const &) 
     template LogicalArray operator!=(Int const &, Array<Int> const &) 
     template LogicalArray operator<(Array<Double> const &, Double const &) 
     template LogicalArray operator<(Array<Int> const &, Array<Int> const &) 
     template LogicalArray operator<(Int const &, Array<Int> const &) 
     template LogicalArray operator<=(Array<Int> const &, Array<Int> const &) 
     template LogicalArray operator<=(Int const &, Array<Int> const &) 
     template LogicalArray operator==(Array<Int> const &, Array<Int> const &) 
     template LogicalArray operator==(Int const &, Array<Int> const &) 
     template LogicalArray operator>(Array<Int> const &, Array<Int> const &) 
     template LogicalArray operator>(Int const &, Array<Int> const &) 
     template LogicalArray operator>=(Array<Int> const &, Array<Int> const &) 
     template LogicalArray operator>=(Int const &, Array<Int> const &) 
1000 casa/Arrays/ArrayMath.cc 
     = casa/BasicSL/Complex.h 
     template Array<Int> cube(Array<Int> const &) 
     template Array<Int> operator-(Array<Int> const &, Array<Int> const &) 
     template Array<Int> operator-(Array<Int> const &, Int const &) 
     template Array<Int> square(Array<Int> const &) 
     template Int mean(Array<Int> const &) 
     template Int median(Array<Int> const &, Bool) 
     template Int median(Array<Int> const &, Bool, Bool, Bool) 
1000 casa/Arrays/ArrayUtil.cc 
     template Array<Int> reorderArray(Array<Int> const &, IPosition const &, Bool) 
1000 casa/Arrays/MaskArrIO.cc 
     template ostream & operator<<(ostream &, MaskedArray<Bool> const &) 
     template ostream & operator<<(ostream &, MaskedArray<Int> const &) 
1000 casa/Arrays/MaskArrLogi.cc 
     template Bool allAND(Bool const &, MaskedArray<Bool> const &) 
     template Bool allAND(MaskedArray<Bool> const &, Bool const &) 
     template Bool allEQ(MaskedArray<Bool> const &, MaskedArray<Bool> const &) 
     template Bool allGE(Int const &, MaskedArray<Int> const &) 
     template Bool allGT(Array<Int> const &, MaskedArray<Int> const &) 
     template Bool allLE(Array<Int> const &, MaskedArray<Int> const &) 
     template Bool allLE(Int const &, MaskedArray<Int> const &) 
     template Bool allLE(MaskedArray<Int> const &, Array<Int> const &) 
     template Bool allLE(MaskedArray<Int> const &, Int const &) 
     template Bool allLE(MaskedArray<Int> const &, MaskedArray<Int> const &) 
     template Bool allLT(MaskedArray<Int> const &, Int const &) 
     template Bool allLT(MaskedArray<Int> const &, MaskedArray<Int> const &) 
     template Bool allOR(Bool const &, MaskedArray<Bool> const &) 
     template Bool allOR(MaskedArray<Bool> const &, Bool const &) 
     template Bool anyAND(Array<Bool> const &, MaskedArray<Bool> const &) 
     template Bool anyAND(Bool const &, MaskedArray<Bool> const &) 
     template Bool anyAND(MaskedArray<Bool> const &, Array<Bool> const &) 
     template Bool anyAND(MaskedArray<Bool> const &, Bool const &) 
     template Bool anyAND(MaskedArray<Bool> const &, MaskedArray<Bool> const &) 
     template Bool anyGE(Int const &, MaskedArray<Int> const &) 
     template Bool anyGT(Array<Int> const &, MaskedArray<Int> const &) 
     template Bool anyLE(MaskedArray<Int> const &, Array<Int> const &) 
     template Bool anyLT(MaskedArray<Int> const &, Int const &) 
     template Bool anyLT(MaskedArray<Int> const &, MaskedArray<Int> const &) 
     template Bool anyOR(Array<Bool> const &, MaskedArray<Bool> const &) 
     template Bool anyOR(Bool const &, MaskedArray<Bool> const &) 
     template Bool anyOR(MaskedArray<Bool> const &, Array<Bool> const &) 
     template Bool anyOR(MaskedArray<Bool> const &, Bool const &) 
     template Bool anyOR(MaskedArray<Bool> const &, MaskedArray<Bool> const &) 
     template MaskedLogicalArray operator!(MaskedArray<Bool> const &) 
     template MaskedLogicalArray operator&&(Bool const &, MaskedArray<Bool> const &) 
     template MaskedLogicalArray operator&&(MaskedArray<Bool> const &, Bool const &) 
     template MaskedLogicalArray operator<=(Array<Int> const &, MaskedArray<Int> const &) 
     template MaskedLogicalArray operator<=(MaskedArray<Int> const &, Array<Int> const &) 
     template MaskedLogicalArray operator<=(MaskedArray<Int> const &, Int const &) 
     template MaskedLogicalArray operator<=(MaskedArray<Int> const &, MaskedArray<Int> const &) 
     template MaskedLogicalArray operator>(Int const &, MaskedArray<Int> const &) 
     template MaskedLogicalArray operator||(Bool const &, MaskedArray<Bool> const &) 
     template MaskedLogicalArray operator||(MaskedArray<Bool> const &, Bool const &) 
1000 casa/Arrays/MaskArrMath.cc 
     template Array<Int> & operator+=(Array<Int> &, MaskedArray<Int> const &) 
     template Double avdev(MaskedArray<Double> const &) 
     template Double avdev(MaskedArray<Double> const &, Double) 
     template Double mean(MaskedArray<Double> const &) 
     template Double rms(MaskedArray<Double> const &) 
     template Double median(MaskedArray<Double> const &, Bool) 
     template Double median(MaskedArray<Double> const &, Bool, Bool) 
     template Double product(MaskedArray<Double> const &) 
     template Double stddev(MaskedArray<Double> const &) 
     template Double sum(MaskedArray<Double> const &) 
     template Double sumsquares(MaskedArray<Double> const &) 
     template Double variance(MaskedArray<Double> const &) 
     template Double variance(MaskedArray<Double> const &, Double) 
     template Int avdev(MaskedArray<Int> const &, Int) 
     template Int mean(MaskedArray<Int> const &) 
     template Int median(MaskedArray<Int> const &, Bool) 
     template Int median(MaskedArray<Int> const &, Bool, Bool) 
     template Int min(MaskedArray<Int> const &) 
     template Int product(MaskedArray<Int> const &) 
     template Int sum(MaskedArray<Int> const &) 
     template Int sumsquares(MaskedArray<Int> const &) 
     template Int variance(MaskedArray<Int> const &, Int) 
     template MaskedArray<Double> abs(MaskedArray<Double> const &) 
     template MaskedArray<Double> atan2(Array<Double> const &, MaskedArray<Double> const &) 
     template MaskedArray<Double> atan2(Double const &, MaskedArray<Double> const &) 
     template MaskedArray<Double> atan2(MaskedArray<Double> const &, Array<Double> const &) 
     template MaskedArray<Double> atan2(MaskedArray<Double> const &, Double const &) 
     template MaskedArray<Double> atan2(MaskedArray<Double> const &, MaskedArray<Double> const &) 
     template MaskedArray<Double> cos(MaskedArray<Double> const &) 
     template MaskedArray<Double> cube(MaskedArray<Double> const &) 
     template MaskedArray<Double> max(Array<Double> const &, MaskedArray<Double> const &) 
     template MaskedArray<Double> max(Double const &, MaskedArray<Double> const &) 
     template MaskedArray<Double> max(MaskedArray<Double> const &, Array<Double> const &) 
     template MaskedArray<Double> max(MaskedArray<Double> const &, Double const &) 
     template MaskedArray<Double> max(MaskedArray<Double> const &, MaskedArray<Double> const &) 
     template MaskedArray<Double> min(Double const &, MaskedArray<Double> const &) 
     template MaskedArray<Double> min(MaskedArray<Double> const &, Array<Double> const &) 
     template MaskedArray<Double> min(MaskedArray<Double> const &, Double const &) 
     template MaskedArray<Double> min(MaskedArray<Double> const &, MaskedArray<Double> const &) 
     template MaskedArray<Double> operator-(MaskedArray<Double> const &, Double const &) 
     template MaskedArray<Double> pow(Array<Double> const &, MaskedArray<Double> const &) 
     template MaskedArray<Double> pow(MaskedArray<Double> const &, Array<Double> const &) 
     template MaskedArray<Double> pow(MaskedArray<Double> const &, Double const &) 
     template MaskedArray<Double> pow(MaskedArray<Double> const &, MaskedArray<Double> const &) 
     template MaskedArray<Double> square(MaskedArray<Double> const &) 
     template MaskedArray<Int> abs(MaskedArray<Int> const &) 
     template MaskedArray<Int> atan2(Array<Int> const &, MaskedArray<Int> const &) 
     template MaskedArray<Int> atan2(MaskedArray<Int> const &, Array<Int> const &) 
     template MaskedArray<Int> atan2(MaskedArray<Int> const &, MaskedArray<Int> const &) 
     template MaskedArray<Int> min(Array<Int> const &, MaskedArray<Int> const &) 
     template MaskedArray<Int> min(MaskedArray<Int> const &, Array<Int> const &) 
     template MaskedArray<Int> min(MaskedArray<Int> const &, MaskedArray<Int> const &) 
     template MaskedArray<Int> operator+(Array<Int> const &, MaskedArray<Int> const &) 
     template MaskedArray<Int> operator+(MaskedArray<Int> const &, Array<Int> const &) 
     template MaskedArray<Int> operator+(MaskedArray<Int> const &, MaskedArray<Int> const &) 
     template MaskedArray<Int> operator-(MaskedArray<Int> const &, Int const &) 
     template MaskedArray<Int> pow(Array<Int> const &, MaskedArray<Int> const &) 
     template MaskedArray<Int> pow(MaskedArray<Int> const &, Array<Int> const &) 
     template MaskedArray<Int> pow(MaskedArray<Int> const &, MaskedArray<Int> const &) 
     template const MaskedArray<Double> & operator*=(MaskedArray<Double> const &, MaskedArray<Double> const &) 
     template const MaskedArray<Double> & operator-=(MaskedArray<Double> const &, Double const &) 
     template const MaskedArray<Int> & operator*=(MaskedArray<Int> const &, MaskedArray<Int> const &) 
     template const MaskedArray<Int> & operator+=(MaskedArray<Int> const &, Array<Int> const &) 
     template const MaskedArray<Int> & operator+=(MaskedArray<Int> const &, MaskedArray<Int> const &) 
     template const MaskedArray<Int> & operator-=(MaskedArray<Int> const &, Int const &) 
     template void indgen(MaskedArray<Int> &) 
     template void indgen(MaskedArray<Int> &, Int) 
     template void indgen(MaskedArray<Int> &, Int, Int) 
     template void max(MaskedArray<Double> const &, Array<Double> const &, Array<Double> const &) 
     template void min(MaskedArray<Double> const &, Array<Double> const &, Array<Double> const &) 
     template void minMax(Double &, Double &, IPosition &, IPosition &, MaskedArray<Double> const &) 
     template void minMax(Double &, Double &, MaskedArray<Double> const &) 
     template void minMax(Int &, Int &, IPosition &, IPosition &, MaskedArray<Int> const &) 
1000 casa/Arrays/MatrixIter.cc 
     template class MatrixIterator<Int> 
     template class ReadOnlyMatrixIterator<Int> 
1000 casa/Arrays/MatrixMath.cc 
     = casa/BasicSL/Complex.h 
     template Matrix<Complex> product(Vector<Complex> const &, Matrix<Complex> const &) 
     template Matrix<DComplex> product(Matrix<DComplex> const &, Matrix<DComplex> const &) 
     template Matrix<DComplex> product(Vector<DComplex> const &, Matrix<DComplex> const &) 
     template Matrix<Double> product(Matrix<Double> const &, Matrix<Double> const &) 
     template Matrix<Double> product(Vector<Double> const &, Matrix<Double> const &) 
     template Matrix<Float> product(Matrix<Float> const &, Matrix<Float> const &) 
     template Matrix<Float> product(Vector<Float> const &, Matrix<Float> const &) 
     template Matrix<Int> directProduct(Matrix<Int> const &, Matrix<Int> const &) 
     template Matrix<Int> product(Matrix<Int> const &, Matrix<Int> const &) 
     template Matrix<Int> product(Vector<Int> const &, Matrix<Int> const &) 
     template Vector<Complex> crossProduct(Vector<Complex> const &, Vector<Complex> const &) 
     template Vector<Complex> product(Matrix<Complex> const &, Vector<Complex> const &) 
     template Vector<DComplex> crossProduct(Vector<DComplex> const &, Vector<DComplex> const &) 
     template Vector<DComplex> product(Matrix<DComplex> const &, Vector<DComplex> const &) 
     template Vector<Double> crossProduct(Vector<Double> const &, Vector<Double> const &) 
     template Vector<Float> crossProduct(Vector<Float> const &, Vector<Float> const &) 
     template Vector<Int> crossProduct(Vector<Int> const &, Vector<Int> const &) 
     template Vector<Int> product(Matrix<Int> const &, Vector<Int> const &) 
