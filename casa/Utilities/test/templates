1000 casa/Arrays/Array.cc casa/Utilities/Regex.h 
     = casa/Arrays/ArrayIO.cc 
     = casa/Arrays/MaskedArray.cc 
     = casa/Arrays/Vector.cc 
     template class Array<Regex> 
     template class MaskedArray<Regex> 
     template class Vector<Regex> 
     template ostream & operator<<(ostream &, Array<Regex> const &) 
1000 casa/Utilities/BinarySearch.cc casa/Arrays/IPosition.h 
     template Int binarySearch(Bool &, IPosition const &, Int const &, uInt, Int) 
     template Int binarySearchBrackets(Bool &, Int * const &, Int const &, uInt, Int) 
1000 casa/Utilities/CountedPtr.cc casa/Containers/Block.h 
     = casa/Utilities/Regex.h 
     template class CountedConstPtr<Block<Regex> > 
     template class CountedPtr<Block<Regex> > 
     template class PtrRep<Block<Regex> > 
     template class SimpleCountedConstPtr<Block<Regex> > 
     template class SimpleCountedPtr<Block<Regex> > 
1010 casa/Utilities/CountedPtr.cc casa/Utilities/test/tCountedPtr.h 
     template class CountedConstPtr<myobj> 
     template class CountedPtr<myobj> 
     template class PtrRep<myobj> 
     template class SimpleCountedConstPtr<myobj> 
     template class SimpleCountedPtr<myobj> 
1000 casa/Utilities/GenSort.cc 
     template uInt genSort(Int *, uInt, Sort::Order, Int) 
     template uInt genSort(Vector<uInt> &, Int const *, uInt, Sort::Order, Int) 
1000 casa/Utilities/LinearSearch.cc casa/Arrays/IPosition.h 
     template Int linearSearch(Bool &, IPosition const &, Int const &, uInt, uInt) 
     template Int linearSearch1(IPosition const &, Int const &, uInt) 
     template Int linearSearchBrackets(Bool &, Int * const &, Int const &, uInt, uInt) 
1000 casa/Utilities/PtrHolder.cc 
     template class PtrHolder<Int> 
1000 casa/Utilities/Register.cc tRegister.h 
     template uInt Register(bar2foo const *) 
     template uInt Register(foo2bar2 const *) 
     template uInt Register(bar const *) 
     template uInt Register(foobar const *) 
     template uInt Register(mytmp<Float> const *) 
     template uInt Register(mytmp<Int> const *) 
     template uInt Register(mytmp<Long> const *) 
     template uInt Register(mytmp<Short> const *) 
     template uInt Register(barfoo2 const *) 
     template uInt Register(foo const *) 
     template uInt Register(bar2 const *) 
     template uInt Register(mytmp2<Short> const *) 
     template uInt Register(mytmp2<Float> const *) 
     template uInt Register(mytmp2<Int> const *) 
     template uInt Register(mytmp2<Long> const *) 
     template uInt Register(foo2 const *) 
     template uInt Register(bar2foo2 const *) 
     template uInt Register(foobar2 const *) 
     template uInt Register(foo2bar const *) 
