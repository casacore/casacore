#!/bin/sh
#-----------------------------------------------------------------------------
# ao: Check out AIPS++ sources
#-----------------------------------------------------------------------------
#
#   Copyright (C) 1992-1996,2001
#   Associated Universities, Inc. Washington DC, USA.
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
#   Correspondence concerning AIPS++ should be addressed as follows:
#          Internet email: aips2-request@nrao.edu.
#          Postal address: AIPS++ Project Office
#                          National Radio Astronomy Observatory
#                          520 Edgemont Road
#                          Charlottesville, VA 22903-2475 USA
#
#-----------------------------------------------------------------------------
# Usage: ao [options for co] file1 [file2,...]
#-----------------------------------------------------------------------------
# ao extracts a source file from the AIPS++ master RCS repository.  The
# filename arguments must be simple filenames without path.
#
# 'ao' invokes $AIPSMSTR/etc/ao_master, where $AIPSMSTR is expected to be NFS
# mounted from the AIPS++ master host (aips2.nrao.edu).
#
# The RCS 'co' command must have write permission on the version file
# in order to check it out of the master repository.  The file ownership
# is defined by the owner of $AIPSMSTR/etc/ao_master, which must be setuid.
#
# Options:
#   -I       These options (-I and -l without revision number) are passed
#   -l       directly to 'co', all other options are defeated.  -l, -r<rev>,
#   -r[rev]  and -u<rev> are mutually exclusive.
#   -u[rev]
#
# Status returns:
#    0:  success (returned from ao_master)
#    1:  initialization error, no check out
#    2:  checkout failure
#
# Original: 1992/04/28 by Mark Calabretta, ATNF
# $Id$
#=============================================================================
# Fundamentals.
  if [ ! "$AIPSPATH" ]
  then
     echo "ao: AIPSPATH is not defined, abort!"
     exit 1
  fi

  AIPSROOT=`echo $AIPSPATH | awk '{ print $1 }'`

# Define AIPS++ directory names.
  AIPSMSTR=$AIPSROOT/master
  MSTRETCD=$AIPSMSTR/etc

# Check number of arguments.
  if [ $# = 0 ]
  then
     echo "Usage: ao [options for co] file1 [file2,...]"
     echo "       Consult the AIPS++ System manual for usage and options."
     exit 1
  fi

# Get the master directory.
  MSTRDIR=`pwd | sed -e 's#/code$#/code/#' -e "s#.*/code/#$AIPSMSTR/#"`

# Make sure we've got something sensible.
  echo $MSTRDIR | grep "^$AIPSMSTR" > /dev/null 2>&1
  if [ "$?" != 0 ]
  then
     echo "ao: Invalid work directory - `pwd`"
     exit 1
  fi

# Get options and file names.
  OPTS=
  FILES=
  FLAG=
  for i
  do
     case $i in
     -I | -r | -u)
        OPTS="$OPTS $i"
        continue
        ;;
     -l | -r* | -u*)
#       These can't be combined.
        if [ "$FLAG" ]
        then
           echo "ao: Defeated option $i"
        else
           OPTS="$OPTS $i"
        fi
        FLAG=1
        continue
        ;;
     -*)
        echo "ao: Defeated option $i"
        continue
        ;;
     esac

#    Allow wildcard checkout via an RCS symbolic link.
     i=`echo $i | sed -e 's#^RCS/##' -e 's#,v$##'`

     case $i in
     */*)
        echo "ao: Pathnames are not allowed!  Ignored $i"
        ;;

     *)
        FILES="$FILES $i"
        ;;
     esac
  done


# Check that the master directories are accessible.
  while [ ! -f "$MSTRETCD/ao_master" ]
  do
     echo "ao: $AIPSMSTR is not responding, trying..." 1>&2
     sleep 15
  done

# Are checkouts disabled?
  if [ -f "$MSTRETCD/ao_disable" ]
  then
     if [ -s "$MSTRETCD/ao_disable" ]
     then
        cat $MSTRETCD/ao_disable
        echo ""
     fi

     echo "ao: Checkouts are currently disabled, try again later."
     exit 2
  fi

# Prevent checkouts by "aips2mgr".
  AIPS2MGR=`getrc -i account.manager 2> /dev/null`
  MGRACCNT=`echo $AIPS2MGR | sed -e 's/\..*//'`
  if [ "${LOGNAME-$USER}" = "$MGRACCNT" ]
  then
     echo "ao: Checkouts by \"$MGRACCNT\" are not permitted." 1>&2
     exit 2
  fi

# Checkout each file in turn from the master.
  for FILE in $FILES
  do
     $MSTRETCD/ao_master $OPTS $FILE $MSTRDIR/$FILE,v
     if [ "$?" != 0 ]
     then
        echo "ao: Failed to check $FILE out of the master, abort!"
        exit 2
     fi
  done


  exit 0
