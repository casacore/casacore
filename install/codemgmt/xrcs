#!/bin/sh
#-----------------------------------------------------------------------------
# xrcs: Verify the internal consistency of RCS version files
#-----------------------------------------------------------------------------
#
#   Copyright (C) 1994,1995
#   Associated Universities, Inc. Washington DC, USA.
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
#   Correspondence concerning AIPS++ should be addressed as follows:
#          Internet email: aips2-request@nrao.edu.
#          Postal address: AIPS++ Project Office
#                          National Radio Astronomy Observatory
#                          520 Edgemont Road
#                          Charlottesville, VA 22903-2475 USA
#
#-----------------------------------------------------------------------------
# Usage: xrcs [-q] [file(s) | directory]
#-----------------------------------------------------------------------------
# xrcs exercises RCS version files.  If a list of files is specified then xrcs
# will verify each; if a directory then all RCS version files in it and in all
# subdirectories will be verified.  Files and directories may not be mixed.
#
# File names may be specified without the ",v" suffix and without an "RCS"
# subdirectory specification.  If <file> is the filename the search order is:
#
#    <file>,v
#    RCS/<file>,v
#    <file>
#    RCS/<file>
#
# xrcs verifies each version file simply by checking out the lowest revision.
# Since this requires 'co' to reconstruct every revision (on the trunk) it can
# only succeed if the whole version file is synactically correct.
#
# If no file or directory is specified then $AIPSROOT/slave is assumed.
#
# Options:
#   -q     Quiet mode, if a list of files was specified then don't report a
#          successful verification.  If a directory was specified, don't
#          report the name and revision of each file in a directory as it is
#          processed.  A summary of any bad files found is always produced.
#
# Status returns:
#    0:  success
#    1:  initialization error
#    2:  a bad RCS version file was found
#
# Notes:
#    1) RCS doesn't provide a simple way of determining the first revision so
#       this must be deduced by parsing the version file itself.
#
# Original: 1994/08/10 by Mark Calabretta, ATNF
# $Id$
#=============================================================================
# Parse options.
  DIR=""
  RCSFILES=""
  VERBOSE=1

  while [ "$#" -gt 0 ]
  do
     case $1 in
     -q)
        VERBOSE=""
        ;;

     *)
        if [ -d "$1" ]
        then
           DIR="$DIR $1"
           RCSFILES=""
        elif [ -f "$1,v" ]
        then
           DIR=""
           RCSFILES="$RCSFILES $1,v"
        elif [ -f "RCS/$1,v" ]
        then
           DIR=""
           RCSFILES="$RCSFILES RCS/$1,v"
        elif [ -f "$1" ]
        then
           DIR=""
           RCSFILES="$RCSFILES $1"
        elif [ -f "RCS/$1" ]
        then
           DIR=""
           RCSFILES="$RCSFILES RCS/$1"
        else
           echo "xrcs: $1 is not a file or directory, abort!" 1>&2
           exit 1
        fi

        ;;
     esac

     [ "$2" = "" ] && break

     shift
  done

  if [ "$DIR$RCSFILES" = "" ]
  then
#    Fundamentals.
     if [ "$AIPSPATH" = "" ]
     then
        echo "xrcs: AIPSPATH is not defined, abort!" 1>&2
        exit 1
     fi

     AIPSROOT=`echo $AIPSPATH | awk '{ print $1 }'`
     AIPSLAVE="$AIPSROOT/slave"

     if [ -d "$AIPSLAVE" ]
     then
        DIR="$AIPSLAVE"
     else
        exec 1>&2
        echo "xrcs: $AIPSLAVE does not exist, please specify a target."
        exit 1
     fi
  fi

  if [ "$RCSFILES" != "" ]
  then
#    Find the lowest revision.
     for RCSFILE in $RCSFILES
     do
        REV=`sed -n -e '/^[1-9][0-9]*\.[0-9][0-9]*$/h' \
                    -e '/^next	;$/{g;p;q;}' $RCSFILE`

        co -p -q -r$REV $RCSFILE > /dev/null
        [ "$?" != 0 ] && BADRCS="$BADRCS $RCSFILE"

        [ "$VERBOSE" != "" ] && echo "xrcs: Verified $RCSFILE ($REV)."
     done

#    Report bad RCS files.
     if [ "$BADRCS" != "" ]
     then
        echo ""
        echo "Summary of bad RCS files found:"
        for BAD in $BADRCS
        do
           echo "   $BAD"
        done

        exit 2
     fi
  else
     echo ""
     echo "xrcs: Verifying $DIR..."
     cd $DIR

     BADRCS=""
     find . -name "*,v" -print |
     {
        exec 3<&0 0</dev/null

        while read RCSFILE 0<&3
        do
#          Find the lowest revision.
           REV=`sed -n -e '/^[1-9][0-9]*\.[0-9][0-9]*$/h' \
                       -e '/^next	;$/{g;p;q;}' $RCSFILE`

           [ "$VERBOSE" != "" ] && echo "$RCSFILE ($REV)"
           co -p -q -r$REV $RCSFILE > /dev/null
           [ "$?" != 0 ] && BADRCS="$BADRCS $RCSFILE"
        done

#       Report bad RCS files.
        if [ "$BADRCS" != "" ]
        then
           echo ""
           echo "Summary of bad RCS files found in $DIR:"
           for BAD in $BADRCS
           do
              echo "   $BAD"
           done

           exit 2
        fi
     } || exit $?
  fi


  exit 0
