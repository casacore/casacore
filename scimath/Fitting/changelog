
<change id=0075>
 <author> Wim Brouw </author>
 <date> 2001/02/16 </date>
 <avers> 1.5 </avers>
 <area> Library </area>
 <package> scimath </package>
 <module> Fitting </module>
 <type> Code Documentation </type>
 <category> New Change </category>
 <defects>  </defects>
 <summary>
added more interface to LinearFit and LinearFitSVD
 </summary>
 <description>
To ease the use of the LinearFit classes LinearFit and LinearFitSVD, I have added three more optiuons to specify the function to be fitted in addition to the existing LinearComb class:
- any functiopn with derivatives (including SumFunctions) can be used as
  a definition of the fitted function: in this way a single polynomial can
  e.g. be specified for a polynomial fit
- a user defined 1D or ND function can be used as the fitting function
- a user defined numeric vector can be used as fitting function

The documentations has been extended with examples and clarifications.
 </description>
</change>

<change id=0119>
 <author> Wim Brouw </author>
 <date> 2002/02/18 </date>
 <avers> 1.7 </avers>
 <area> Library </area>
 <package> scimath </package>
 <module> Fitting </module>
 <type> Code </type>
 <category> Change </category>
 <defects>  </defects>
 <summary>
High level fitting
 </summary>
 <description>
The high-level fitting (LinearFit, NonLinearFit) classes have been changed. They all accept now the 'new' Function classes, which produce an automatic derivative wrt the parameters.

The major change for the use of these classes is the similarity between Linear and nonLinear solutions (no need to combine many polynomial terms), and the fact that the FuncWithDerivs are no longer necessary: any function derived from the Function class can be used to solve for its parameters
 </description>
</change>

<change id=0164>
 <author> Wim Brouw </author>
 <date> 2005/02/15 </date>
 <avers> 1.9 </avers>
 <area> Library </area>
 <package> scimath </package>
 <module> Fitting </module>
 <type> Code </type>
 <category> New </category>
 <defects>  </defects>
 <summary>
Merge separate normal equations
 </summary>
 <description>
Added merge() option to LSQFit (and derived classes) to merge separately created normal equations (e.g. on multi-processor machines)
 </description>
</change>

<change id=0168>
 <author> Wim Brouw </author>
 <date> 2005/04/21 </date>
 <avers> 1.9 </avers>
 <area> Library </area>
 <package> scimath </package>
 <module> Fitting </module>
 <type> Code Documentation Test </type>
 <category> New </category>
 <defects>  </defects>
 <summary>
Enable use of Fitting classes in distributed way
 </summary>
 <description>
The basic fitting class (LSQFit and its derived LSQaips) has been enhanced with:
- merge(): a full and sparse version. Merge will merge normal equations produced separately (e.g. on separate compute nodes)
- toRecord/fromRecord: to enable transport of fitting information (normal equations e.g.) between different processing nodes the Fitting objecst can be converted to/from generic Records.

Examples of the use of these facilities are in tLSQFit.
 </description>
</change>
