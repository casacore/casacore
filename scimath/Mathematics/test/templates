1000 casa/Arrays/Array.cc scimath/Mathematics/AutoDiff.h 
     template class Array<AutoDiff<AutoDiff<Double> > > 
1000 casa/Arrays/ArrayIO.cc 
     = scimath/Mathematics/AutoDiff.h 
     = scimath/Mathematics/AutoDiffIO.h 
     template ostream & operator<<(ostream &, Array<AutoDiff<Double> > const &) 
1000 casa/Arrays/ArrayLogical.cc 
     template Bool allNearAbs(Array<Double> const &, Double const &, Double) 
     = casa/BasicSL/Complex.h 
     template Bool allNearAbs(Array<Complex> const &, Array<Complex> const &, Double) 
     template Bool allNearAbs(Array<DComplex> const &, Array<DComplex> const &, Double) 
1000 casa/Arrays/ArrayMath.cc 
     = scimath/Mathematics/AutoDiff.h 
     = scimath/Mathematics/AutoDiffMath.h 
     template void operator+=(Array<AutoDiff<Double> > &, AutoDiff<Double> const &) 
     template void operator-=(Array<AutoDiff<Double> > &, AutoDiff<Double> const &) 
     template void operator*=(Array<AutoDiff<Double> > &, AutoDiff<Double> const &) 
     template void operator/=(Array<AutoDiff<Double> > &, AutoDiff<Double> const &) 
     template void operator+=(Array<AutoDiff<Double> > &, Array<AutoDiff<Double> > const &) 
     template void operator-=(Array<AutoDiff<Double> > &, Array<AutoDiff<Double> > const &) 
     template void operator*=(Array<AutoDiff<Double> > &, Array<AutoDiff<Double> > const &) 
     template void operator/=(Array<AutoDiff<Double> > &, Array<AutoDiff<Double> > const &) 
     template Array<AutoDiff<Double> > operator-(Array<AutoDiff<Double> > const &) 
1000 casa/Arrays/MaskedArray.cc scimath/Mathematics/AutoDiff.h 
     template class MaskedArray<AutoDiff<AutoDiff<Double> > > 
1000 casa/Arrays/Vector.cc scimath/Mathematics/AutoDiff.h 
     template class Vector<AutoDiff<AutoDiff<Double> > > 
1000 casa/Containers/ObjectPool.cc scimath/Mathematics/AutoDiffRep.h 
     = scimath/Mathematics/AutoDiff.h 
     template class ObjectPool<AutoDiffRep<AutoDiff<Double> >, uInt> 
1000 casa/Containers/OrderedPair.cc casa/Containers/PoolStack.h 
     = scimath/Mathematics/AutoDiff.h 
     template <class T> class AutoDiffRep 
     template class OrderedPair<uInt, PoolStack<AutoDiffRep<AutoDiff<Double> >, uInt> *> 
1000 casa/Containers/PoolStack.cc scimath/Mathematics/AutoDiffRep.h 
     = scimath/Mathematics/AutoDiff.h 
     template class PoolStack<AutoDiffRep<AutoDiff<Double> >, uInt> 
1000 casa/Containers/SimOrdMap.cc casa/Containers/PoolStack.h 
     = scimath/Mathematics/AutoDiff.h 
     template <class T> class AutoDiffRep 
     template class SimpleOrderedMap<uInt, PoolStack<AutoDiffRep<AutoDiff<Double> >, uInt>*> 
1000 casa/Utilities/Fallible.h 
     template class Fallible<Float> 
1000 scimath/Mathematics/AutoDiff.cc scimath/Mathematics/AutoDiffMath.h 
     template class AutoDiff<AutoDiff<Double> > 
1000 scimath/Mathematics/AutoDiffIO.cc scimath/Mathematics/AutoDiff.h 
     template ostream & operator<<(ostream &, AutoDiff<AutoDiff<Double> > const &) 
1000 scimath/Mathematics/AutoDiffMath.cc 
     = scimath/Mathematics/AutoDiff.h 
     template AutoDiff<AutoDiff<Double> > operator*(AutoDiff<AutoDiff<Double> > const &, AutoDiff<AutoDiff<Double> > const &) 
     template AutoDiff<AutoDiff<Double> > operator*(AutoDiff<Double> const &, AutoDiff<AutoDiff<Double> > const &) 
     template AutoDiff<AutoDiff<Double> > operator*(AutoDiff<AutoDiff<Double> > const &, AutoDiff<Double> const &) 
1000 scimath/Mathematics/AutoDiffRep.cc scimath/Mathematics/AutoDiff.h 
     template class AutoDiffRep<AutoDiff<Double> > 
1000 scimath/Mathematics/Convolver.cc 
     template class Convolver<Double> 
1000 scimath/Mathematics/FFTServer.cc casa/BasicSL/Complex.h 
     template class FFTServer<Double, DComplex> 
1000 scimath/Mathematics/HistAcc.cc 
     template class HistAcc<Float> 
     template class HistAcc<Int> 
1000 scimath/Mathematics/MathFunc.cc 
     template class ExpSincConv<Double> 
     template class GaussianConv<Double> 
     template class KB_Conv<Double> 
     template class MathFunc<Double> 
     template class Mod_KB_Conv<Double> 
     template class Sinc_Conv<Double> 
     template class Sph_Conv<Double> 
     template class Unary<Double> 
1010 scimath/Mathematics/MathFunc.cc 
     template class ExpSincConv<Float> 
     template class GaussianConv<Float> 
     template class KB_Conv<Float> 
     template class MathFunc<Float> 
     template class Mod_KB_Conv<Float> 
     template class Sinc_Conv<Float> 
     template class Sph_Conv<Float> 
     template class Unary<Float> 
1000 scimath/Mathematics/MatrixMathLA.cc 
     = casa/BasicSL/Complex.h 
     template Matrix<DComplex> invert(Matrix<DComplex> const &) 
     template void invert(Matrix<DComplex> &, DComplex &, Matrix<DComplex> const &) 
1000 scimath/Mathematics/StatAcc.cc 
     template class StatAcc<Float> 
     template class StatAcc<Int> 
