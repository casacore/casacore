#!/bin/sh
#-----------------------------------------------------------------------------
# Script to test the JOIN functionality of
# TableGram and TableParse class.  All files generated will
# be deleted on exit.
#=============================================================================

# If the first argument given to the script is 1, it will only create the
# tTableGramJoin_tmp.tab tables and not execute the tTableGram commands.


# Set default testsrcdir if undefined.
if test "$testsrcdir" = ""; then
  testsrcdir=../../../../../casacore/tables/TaQL/test
fi

# Create tables to do the join.
echo "Creating the test tables ..."
rm -rf tTableGramJoin_tmp.tab*
../../apps/taql "UPDATE [CREATE TABLE tTableGramJoin_tmp.tab [cmi int, cmi2 int, cmd double, cdd int, ct time] limit 20] set cmi=rowid()%6, cmi2=rowid()%3, cmd=rowid()%2+4.3, cdd=rowid()%9, ct=2nov2022/12h0m0+rowid()//7"
../../apps/taql "UPDATE [CREATE TABLE tTableGramJoin_tmp.tab::SUB [cb bool, ci int, ci2 int, cd double, cd2 double unit='d', cw double unit='s', cs string, ct time, cc complex, cab Bool shape=[3,2], cai int [shape=[3,2]], cad double [shape=[3,2]], cas string shape=[3,2]] limit 5] set ci=rowid(), ci2=rowid()//2, cai=[[ci,ci+1],[ci+2,ci+3],[ci+4,ci+5]], cb=ci%2=0, cd=ci+1, cs=string(ci+2,'x%dy'), ct=31Oct2022/12:0:0+ci, cd2=rowid()%2+4, cw=86400, cc=ci%2+ci%3*1i, cab=cai%3=1, cas=string(cai+3,'x%dyy')"
../../apps/taql "select ci2, cd2, cd from tTableGramJoin_tmp.tab::SUB"

if test "$1" = 1; then
  exit 0;
fi

# Create a symlink to achieve that casacore_memcheck (if used) will use
# that name 
rm -f tTableGramJoin
ln -s tTableGram tTableGramJoin

# Execute all kind of join commands.
echo
echo "testing joins ..."

# Join on a single integer column.
echo
$casa_checktool ./tTableGramJoin "SELECT t1.cmi, t1.cmi2, t1.cmd, t2.ci, t2.cd, t2.cd2 FROM tTableGramJoin_tmp.tab t1 JOIN ::SUB t2 ON t1.cmi=msid(t2.ci)"

# Join on rowid (column 'cirow' in msid does not exist)
echo
$casa_checktool ./tTableGramJoin "SELECT t1.cmi, t1.cmi2, t1.cmd, t2.ci, t2.cd, t2.cd2, msid(cmixx), t2.msid(ci), t2.rowid() FROM tTableGramJoin_tmp.tab t1 JOIN ::SUB t2 ON t1.cmi=t2.rowid()+1"
echo
$casa_checktool ./tTableGramJoin "SELECT t1.cmi, t1.cmi2, t1.cmd, t2.ci, t2.cd, t2.cd2, msid(cmixx), msid(t2.ci), t2.rowid()+1 FROM tTableGramJoin_tmp.tab t1 JOIN ::SUB t2 ON t1.cmi=t2.rowid()+1 where t2.ci%5 > 2"
echo
$casa_checktool ./tTableGramJoin "SELECT t1.cmi, t1.cmi2, t1.cmd, t2.ci, t2.cd, t2.cd2 FROM tTableGramJoin_tmp.tab t1 JOIN ::SUB t2 ON t1.cmi=msid(t2.cirow)"

# Use aggregation and GROUPBY on a join column.
echo
$casa_checktool ./tTableGramJoin "SELECT t1.cmi, gsum(t2.ci), gsum(t2.cd) FROM tTableGramJoin_tmp.tab t1 JOIN ::SUB t2 ON t1.cmi=msid(t2.ci) GROUPBY t2.ci"

# Join on a single interval (which is not unique; first one is taken).
echo
$casa_checktool ./tTableGramJoin "SELECT t1.cmi2, t1.cmd, t2.ci2, t2.cd2, t2.cd FROM tTableGramJoin_tmp.tab t1 JOIN ::SUB t2 ON t1.cmd around t2.cd2 in t2.cw"

# Join on an integer and an interval (where units are adjusted).
echo
$casa_checktool ./tTableGramJoin "SELECT t1.cmi2, t1.cmd, t2.ci2, t2.cd2, t2.cd FROM tTableGramJoin_tmp.tab t1 JOIN ::SUB t2 ON t1.cmi2=t2.ci2 && t1.cmd around t2.cd2 in t2.cw"

# Join on two integers.
echo
$casa_checktool ./tTableGramJoin "SELECT t1.cmi, t1.cmi2, t1.cmd, t2.ci, t2.cd, t2.cd2 FROM tTableGramJoin_tmp.tab t1 JOIN ::SUB t2 ON t1.cmi=t2.ci and t2.ci=t1.cmi"

# Join on two intervals.
echo
$casa_checktool ./tTableGramJoin "SELECT t1.cmi2, t1.cmd, t2.ci2, t2.cd2, t2.cd, t2.cad FROM tTableGramJoin_tmp.tab t1 JOIN ::SUB t2 ON t1.cmd around t2.cd2 in t2.cw and t1.cmd around t2.cd2 in t2.cw"


# Do a MS-SYSCAL like join (see at the end).
echo
echo "Updating the tables for nested joins ..."
../../apps/taql "UPDATE [CREATE TABLE tTableGramJoin_tmp.tab::DD [spw int, pol int] limit 9] set spw=rowid()%3, pol=rowid()//3"
../../apps/taql "UPDATE [CREATE TABLE tTableGramJoin_tmp.tab::SC [spw int, tod TIME, w double unit='s', ci int] limit 9] set spw=rowid()%3, w=1d, tod=2nov2022/12h0m0+rowid()//3, ci=rowid()"
../../apps/taql "select * from tTableGramJoin_tmp.tab::DD"
../../apps/taql "select * from tTableGramJoin_tmp.tab::SC"
../../apps/taql "select * from tTableGramJoin_tmp.tab"

echo
$casa_checktool ./tTableGramJoin "SELECT t1.rowid() as r1, t2.rowid() as r2, t3.rowid() as r3, t2.pol, t3.ci FROM tTableGramJoin_tmp.tab t1 JOIN ::DD t2 ON t1.cdd=t2.rowid() JOIN ::SC t3 ON t2.spw=t3.spw AND t1.ct AROUND t3.tod IN t3.w"

echo
$casa_checktool ./tTableGramJoin "SELECT t1.rowid() as r1, t2.pol, t3.ci FROM tTableGramJoin_tmp.tab t1 JOIN ::DD t2 ON t1.cdd=t2.rowid() JOIN ::SC t3 ON t2.spw=t3.spw AND t1.ct AROUND t3.tod IN t3.w WHERE t3.ci%3!=0"

# Some erroneous commands.
echo
echo "Testing erroneous commands ..."
$casa_checktool ./tTableGramJoin "select from tTableGramJoin_tmp.tab t1 JOIN ::DD t2 on gsum(t1.cdd)=t2.rowid()"
$casa_checktool ./tTableGramJoin "select from tTableGramJoin_tmp.tab t1 JOIN ::SUB t2, ::SC t3 on t1.cdd=t2.rowid()+t3.rowid()"
$casa_checktool ./tTableGramJoin "select from tTableGramJoin_tmp.tab t1 JOIN ::SUB t2 on t1.cmd=t2.ci"
$casa_checktool ./tTableGramJoin "select t2.rownr() from tTableGramJoin_tmp.tab t1 JOIN ::DD t2 on t1.cdd=t2.rowid()"
$casa_checktool ./tTableGramJoin "select from tTableGramJoin_tmp.tab t1 JOIN ::DD t2 on t1.cdd=3"
$casa_checktool ./tTableGramJoin "select from tTableGramJoin_tmp.tab t1 JOIN ::DD t2 on t1.cmi!=t2.rowid()"
$casa_checktool ./tTableGramJoin "select from tTableGramJoin_tmp.tab t1 JOIN ::DD t2 on [t1.cmi,t1.cmi]=t2.rowid()"
$casa_checktool ./tTableGramJoin "select from tTableGramJoin_tmp.tab t1 JOIN ::DD t2 on t2.rowid() in [t1.cmi,t1.cmi]"
$casa_checktool ./tTableGramJoin "select from tTableGramJoin_tmp.tab t1 JOIN ::DD t2 on t1.cmi+t2.rowid()=t2.rowid()"
$casa_checktool ./tTableGramJoin "select from tTableGramJoin_tmp.tab t1 JOIN ::DD t2 on t1.cmi=t2.rowid()+t1.cmi"

# Remove the symlink
rm -f tTableGramJoin

# Command for a join on the SYSCAL table of an MSv2:
#  using style python select from ~/data/GER.MS t1
#   join ::DATA_DESCRIPTION t2 ON t1.DATA_DESC_ID==t2.rowid()
#   join ::SYSCAL t3 ON t1.ANTENNA1==t3.ANTENNA_ID and t2.SPECTRAL_WINDOW_ID==t3.SPECTRAL_WINDOW_ID and t1.TIME in t3.TIME<:>t3.INTERVAL
